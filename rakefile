require 'bundler/setup'
require 'albacore'

RAKE_DIR = File.dirname __FILE__
YETI_PROJ = File.join(RAKE_DIR, 'src/Code/yeti/yeti.csproj')
YETI_BIN_ROOT = File.join(RAKE_DIR, 'src/Code/yeti/bin')
LIB_DIR = File.join(RAKE_DIR, 'src/Lib')

task :clean do
  puts 'Cleaning all bin and obj directories'
  Pathname.glob("#{RAKE_DIR}/src/Code/**/bin") { |f| rm_rf f }
  Pathname.glob("#{RAKE_DIR}/src/Tests/**/bin") { |f| rm_rf f }
  Pathname.glob("#{RAKE_DIR}/src/Code/**/obj") { |f| rm_rf f }
  Pathname.glob("#{RAKE_DIR}/src/Tests/**/obj") { |f| rm_rf f }
end

task :build => ['build:debug:x86', 'build:debug:x64', 'build:release:x86', 'build:release:x64']
task :rebuild => [:clean, :build]

namespace :build do
  namespace :debug do
    task :x86 => [:build_x86] do
      copy_lame :Debug, :x86
    end

    msbuild :build_x86 do |msb|
      prepare_sln msb, :Debug, :x86
    end

    task :x64 => [:build_x64] do
      copy_lame :Debug, :x64
    end

    msbuild :build_x64 do |msb|
      prepare_sln msb, :Debug, :x64
    end
  end

  namespace :release do
    task :x86 => [:build_x86] do
      copy_lame :Release, :x86
    end

    msbuild :build_x86 do |msb|
      prepare_sln msb, :Release, :x86
    end

    task :x64 => [:build_x64] do
      copy_lame :Release, :x64
    end

    msbuild :build_x64 do |msb|
      prepare_sln msb, :Release, :x64
    end
  end

  def prepare_sln(msb, configuration, platform)
    msb.properties(
      :configuration => configuration,
      :platform => platform,
      :verbosity => 'detailed'
    )

    msb.targets :Build
    msb.solution = YETI_PROJ
  end

  def copy_lame(configuration, platform)
    build_dir = File.join(YETI_BIN_ROOT, platform.to_s, configuration.to_s)
    lame_dll = File.join(LIB_DIR, 'Lame', platform.to_s, 'lame_enc.dll')

    cp lame_dll, build_dir
  end
end
